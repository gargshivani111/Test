package com.aem.core.servlets;
 
import org.apache.felix.scr.annotations.Reference;
import org.apache.felix.scr.annotations.sling.SlingServlet;
import org.apache.sling.api.SlingHttpServletRequest;
import org.apache.sling.api.SlingHttpServletResponse;
import org.apache.sling.api.resource.Resource;
import org.apache.sling.api.servlets.SlingAllMethodsServlet;
import org.apache.sling.api.servlets.SlingSafeMethodsServlet; 

import com.mastercard.apie.axon.sdk.core.AxonMessage;
import com.mastercard.apie.axon.sdk.core.AxonService;
import com.mastercard.apie.axon.sdk.core.AxonServiceProducer;

import javax.jcr.Repository;
import javax.servlet.ServletException;

import java.io.IOException;
import java.util.Properties;
 
/**
 * Servlet that writes some sample content into the response. It is mounted for
 * all resources of a specific Sling resource type. The
 * {@link SlingSafeMethodsServlet} shall be used for HTTP methods that are
 * idempotent. For write operations use the {@link SlingAllMethodsServlet}.
 */
@SuppressWarnings("serial")
@SlingServlet(paths = "/bin/custom/path")
public class GenerateMessageServlet extends SlingSafeMethodsServlet {
    @Reference
    private Repository repository;
    @Override
    protected void doGet(final SlingHttpServletRequest req,
            final SlingHttpServletResponse resp) throws ServletException, IOException {
    	Properties props = new Properties();
    	props.put("bootstrap.servers", "rt01.axon.sandbox02.dev.mastercard.int:9094, rt02.axon.sandbox02.dev.mastercard.int:19094, rt03.axon.sandbox02.dev.mastercard.int:9094");
    	props.put("schemareg.url","https://sr.axon.sandbox02.dev.mastercard.int:8081");
    	props.put("","");
    	
    	
    	AxonServiceProducer producer = AxonService.getProducerBuilder().withProperties("durable_producer.properties").build();
    	final Resource resource = req.getResource();
        resp.getOutputStream().println(resource.toString());
        resp.getOutputStream().println(
                "This content is generated by the SimpleServlet1");
         
    }
}