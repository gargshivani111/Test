# Pub Service URL. A URL of the Non-Durable runtime proxy
pub.service.url=tcp://localhost:5555

# Sub Service URL. A URL of the Non-Durable runtime proxy.
sub.service.url=tcp://localhost:6666

# Schema Registry URL. Ex. http(s)://host:port
schemareg.url=http://localhost:8081

#List of ZooKeeper host:port connection string. Ex. host1:port1,host2:port2
#zookeeper.connect=localhost:2181

#Non-Durable Messaging service namespace for discovering with Routing Client
#service.namespace=com.mastercard.apie.MessagingService

#Non-Durable Publish Endpoint service name registered with Routing Client
#pub.service.name=NonDurable.PublishEndpoint

#Non-Durable Subscribe Endpoint service name registered with Routing Client
#sub.service.name=NonDurable.SubscribeEndpoint

# Name registered for schema registry endpoint in routing client
#sr.service.name=SchemaRegistry

#The send.hwm option sets the high water mark for outbound messages from the producer. The high water mark is
#a hard limit on the maximum number of outstanding messages queued in memory. If this limit has been reached,
#the producer will drop the messages resulting in loosing those messages.
send.hwm=5000

#The recv.hwm option sets the high water mark for inbound messages into the consumer. The high water mark is
#a hard limit on the maximum number of outstanding messages queued in memory. If this limit has been reached,
#the consumer will drop the messages resulting in loosing those messages.
recv.hwm=5000

#This option sets the underlying kernel receive buffer size for the socket to the specified size in bytes. The
#Non-Durable messaging uses ZeroMQ library which internally uses sockets for sending and receiving messages.
#This option controls the receive (the consumer) side of the socket. A value of zero means leave the OS default unchanged.
#For details refer to your operating system documentation for the SO_RCVBUF socket option
recv.buf.size=0

#This option sets the underlying kernel send buffer size for the socket to the specified size in bytes. The
#Non-Durable messaging uses ZeroMQ library which internally uses sockets for sending and receiving messages.
#This option controls the sending (the producer) side of the socket. A value of zero means leave the OS default unchanged.
#For details refer to your operating system documentation for the SO_SNDBUF socket option
send.buf.size=0